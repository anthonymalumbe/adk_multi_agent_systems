from newsapi import NewsApiClient

API_KEY = 'your_api_key_here'
newsapi = NewsApiClient(api_key=API_KEY)


top_headlines = newsapi.get_top_headlines(country='us')
articles = top_headlines['articles']

for article in articles:
    title = article['title']
    description = article['description']
    print(title)
    print(description)
    print()


# importing requests package
import requests     

def NewsFromBBC():
    
    # BBC news api
    # following query parameters are used
    # source, sortBy and apiKey
    query_params = {
      "source": "bbc-news",
      "sortBy": "top",
      "apiKey": "4dbc17e007ab436fb66416009dfb59a8"
    }
    main_url = " https://newsapi.org/v1/articles"

    # fetching data in json format
    res = requests.get(main_url, params=query_params)
    open_bbc_page = res.json()

    # getting all articles in a string article
    article = open_bbc_page["articles"]

    # empty list which will 
    # contain all trending news
    results = []
    
    for ar in article:
        results.append(ar["title"])
        
    for i in range(len(results)):
        
        # printing all trending news
        print(i + 1, results[i])



#  url, either title or description if either is empty otherwise always select description, content.should it accept one or multiple source IDs as parameters. A predeifined list would be BBC News (UK),l Jazeera (Qatar),Associated Press (US),Reuters (UK), Xinhua News Agency (China, Deutsche Welle (Germany), France 24 (France), CNN (US) and Sky News (UK). if neither from_date nor to_date is specified, we just grab the 10 most recent. What date format "DD-MM-YYYY". parameter that could be "publishedAt" | "popularity" | "relevancy". ead from an environment variable (os.environ["NEWSAPI_KEY"]). Return an empty list with a logged warning. should it return a structured Python object (e.g., a list of dictionaries), letting the caller decide how to display them.

